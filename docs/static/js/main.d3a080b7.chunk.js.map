{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cate","placeholder","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","original","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","imagenes","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAKhB,SACE,uBACEO,YAAY,eACZC,KAAK,OACLC,MAAOV,EACPW,SAlBoB,SAACR,GACzBF,EAAcE,EAAES,OAAOF,a,+BCNdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CAAEC,GAAID,EAAIC,GAAIC,MAAOF,EAAIE,MAAOV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,SAASZ,QAP9C,kBASdM,GATc,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACvC,OACE,sBAAKc,UAAU,wCAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFGO,EAAU,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UACxB,ECH0B,SAACA,GAC3B,MAA0Bf,mBAAS,CACjCsB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAWA,OANAC,qBAAU,WACRxB,EAAQC,GAAWwB,MAAK,SAACC,GACvBH,EAAS,CAAEf,KAAMkB,EAAML,SAAS,SAEjC,CAACpB,IAEGqB,EDT6BK,CAAa1B,GAAnC2B,EAAd,EAAQpB,KAAgBa,EAAxB,EAAwBA,QAExB,OACE,qCACE,oBAAIJ,UAAU,yCAAd,SAAwDhB,IACvDoB,GACC,mBAAGJ,UAAU,oCAAb,yBAEF,qBAAKA,UAAU,YAAf,SACGW,EAASlB,KAAI,SAACC,GACb,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEZ1BiB,EAAe,WAC1B,MAAoC3C,mBAAS,CAAC,YAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACG6C,EAAWpB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAyBA,UAAWA,GAAtBA,Y,MCRxB8B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.d3a080b7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({ setCategorias }) => {\n  const [inputValue, setinputValue] = useState(\"\");\n  const handleInputChange = (e) => {\n    setinputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 2) {\n      setCategorias((cate) => [inputValue, ...cate]);\n      setinputValue(\"\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        placeholder=\"Busca un gif\"\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n      />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategorias: PropTypes.func.isRequired,\n};\n","export const getGifs = async (categoria) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    categoria\n  )}&limit=10&api_key=zAhU2O2Jyws5NRfwLqf3emRSZLCEWvrA`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n  const gifs = data.map((img) => {\n    return { id: img.id, title: img.title, url: img.images?.original.url };\n  });\n  return gifs;\n};\n","import React from \"react\";\n\nexport const GifGridItem = ({ id, title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__pulse\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GifGridItem } from \"./GifGridItem\";\n\nexport const GifGrid = ({ categoria }) => {\n  const { data: imagenes, loading } = useFetchGifs(categoria);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__backInRight\">{categoria}</h3>\n      {loading && (\n        <p className=\"animate__animated animate__fadeIn\">Cargando...</p>\n      )}\n      <div className=\"card-grid\">\n        {imagenes.map((img) => {\n          return <GifGridItem key={img.id} {...img} />;\n        })}\n      </div>\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\nexport const useFetchGifs = (categoria) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(categoria).then((imgs) => {\n      setState({ data: imgs, loading: false });\n    });\n  }, [categoria]);\n\n  return state; //{data:[], loading:true}\n};\n","import React, { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\nexport const GifExpertApp = () => {\n  const [categorias, setCategorias] = useState([\"Pokemon\"]);\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategorias={setCategorias} />\n      <hr />\n\n      <ol>\n        {categorias.map((categoria) => (\n          <GifGrid key={categoria} categoria={categoria} />\n        ))}\n      </ol>\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GifExpertApp } from \"./GifExpertApp\";\n\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}